/*
You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8

Hide Tags Linked List Math
Hide Similar Problems (M) Multiply Strings (E) Add Binary
*/

//Codes start from here

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode result = new ListNode(0), current = result;
        int carry = 0;
        while (l1 != null || l2 != null || carry == 1) {
            int tmp = (l1 != null?l1.val:0) + (l2 != null?l2.val:0) + carry;
            current.next = new ListNode(tmp%10);
            carry = tmp/10;
            l1 = l1 == null?null:l1.next;
            l2 = l2 == null?null:l2.next;
            current = current.next;
        }
        return result.next;
    }
}
